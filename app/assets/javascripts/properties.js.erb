$(document).ready(function() {

  hiddenInputs();

  // button save of form property
  $("a.property-save").click(function() {
    $("a.property-save").attr("disabled", true);
    if (validateTransactions()){
      cleanUpTransactionFields();
      $("#new_property, [id^=edit_property_]").submit();
    } else
      alert("<%= I18n.t('properties.transactions.error') %>");
  });

  $(".gallery").fancybox({
    openEffect  : 'elastic',
    closeEffect : 'elastic',
    prevEffect  : 'elastic',
    nextEffect  : 'elastic'
  });

  // close the photo and set _destroy
  $('form').on('click', '.remove_fields', function(event) {
    $(this).siblings().find("input[type=hidden]").val('1');
    $(this).closest('.photo').hide();
    return event.preventDefault();
  });

  // add new photo
  $('form').on('click', '.add_fields', function(event) {
    var regexp, time;
    time = new Date().getTime();
    regexp = new RegExp($(this).data('id'), 'g');
    $(this).before($(this).data('fields').replace(regexp, time));
    event.preventDefault();
  });

  // token to customer
  $('#property_owner_tokens').tokenInput('/customers.json', {
    crossDomain: false,
    prePopulate: $('#property_owner_tokens').data('pre'),
    theme: "facebook",
    tokenLimit: "1",
    noResultsText: "<%= I18n.t('.token_input.noResultsText') %>",
    hintText: "<%= I18n.t('.token_input.hintText_surname')%>",
    searchingText: "<%= I18n.t('.token_input.searchingText')%>",
    resultsFormatter: function(item){
      return "<li><p style='color: black' >" + item.name
      + " " + item.surname +  " " + item.dni + " </p> </li>" },
    tokenFormatter: function(item) {
      return "<li><p>" + (item.name + " " +
      item.surname ).substring(0,22)+ " " + item.dni + " </p> </li>" }
  });

  // changes the visibility of transactions inputs
  $("#to_sale, #to_rent").on('click', function(e){
    $(this).parents(".thorizontal").siblings().toggle("show");
  });

    /*********
    DATA-TABLE
    **********/

  // function principal to show
  // ---------------------------
  var oTable, bMyProperties;
  bMyProperties = false;
  oTable = $('#property-history').dataTable({
    sPaginationType: "full_numbers",
    bJQueryUI: true,
    bProcessing: true,
    bServerSide: true,
    sAjaxSource: $('#property-history').data('source'),
    bAutoWidth: false,
    aoColumns: [
      { "sWidth": "45%", "bSearchable": false },
      { "sWidth": "10%", "sClass": "center", "bSearchable": true },
      { "sWidth": "10%", "bSearchable": true }
    ]
  });

  // function principal to index
  // ---------------------------
  var oTable, bMyProperties;
  bMyProperties = false;
  oTable = $('#properties').dataTable({
    sPaginationType: "full_numbers",
    bJQueryUI: true,
    bProcessing: true,
    bServerSide: true,
    sAjaxSource: $('#properties').data('source'),
    aaSorting: [[ 0, "desc" ]],
    fnInitComplete: function(oSettings, json){
      $("a#tab-all-prop").click(function() {
         bMyProperties = false;
         oTable.fnFilter("");
      });
      $("a#tab-my-prop").click(function() {
         bMyProperties = true;
         oTable.fnFilter("");
      });
      // Add a select menu for each TH element in the table footer
      $("thead th").each( function (i) {
          $('select', this).change( function () {
            oTable.fnFilter($(this).val(),i);
           });
      });
    },
    aoColumns: aColumnsOptions,
    "fnServerParams": function ( aoData ) {
      aoData.push( { "name": "bMyProperties", "value": bMyProperties } );
    }
  });

  // row select
  // ----------
  var giRedraw = false
  // Add a click handler to the rows - this could be used as a callback
  $("#properties tbody").click(function(event) {
    $(oTable.fnSettings().aoData).each(function (){
      $(this.nTr).removeClass('row_selected');
    });
    $(event.target.parentNode).addClass('row_selected');
  });
  // Add a click handler for the delete row
  $('#delete').click( function() {
    var anSelected = fnGetSelected( oTable );
    oTable.fnDeleteRow( anSelected[0] );
  } );
  // Init the table
  oTable = $('#properties').dataTable( );

});// END-$(document)

  /*********
  DATA-TABLE
  **********/

var aColumnsOptions =
    [
      { "sWidth": "5%", "sClass": "center", "bSearchable": true },
      { "sWidth": "10%", "bSearchable": true },
      { "sWidth": "10%", "bSearchable": true },
      { "sWidth": "10%", "bSearchable": true },
      { "bSearchable": true },
      { "sWidth": "5%", "sClass": "center", "bSearchable": true },
      { "bSearchable": true },
      { "bSearchable": false, "bSortable": false}
    ]

// Get the rows which are currently selected
function fnGetSelected( oTableLocal )
{
  var aReturn = new Array();
  var aTrs = oTableLocal.fnGetNodes();

  for ( var i=0 ; i<aTrs.length ; i++ )
  {
    if ( $(aTrs[i]).hasClass('row_selected') )
    {
      aReturn.push( aTrs[i] );
    }
  }
  return aReturn;
}
// --- end data-table ----

function validateTransactions(){
  var rent, sale, tinput, sale_ok, rent_ok;
  sale_ok = true; rent_ok = true;
  rent = $('#to_rent');
  sale = $('#to_sale');
  if (sale.prop('checked')){
    tinput = sale.parents(".thorizontal").siblings().children(".tinput");
    tinput.children().each( function(i, e){
      sale_ok =  sale_ok && $(e).val() !=""
    })
  }
  if (rent.prop('checked')){
    tinput = rent.parents(".thorizontal").siblings().children(".tinput");
    tinput.children().each( function(i, e){
      rent_ok =  rent_ok && $(e).val() !=""
    })
  }
  return sale_ok && rent_ok
}


// clean up the input and select fields that aren't checked
function cleanUpTransactionFields() {
 var rent, sale, tinput;
  rent = $('#to_rent');
  sale = $('#to_sale');
  if (!sale.prop('checked')){
    tinput = sale.parents(".thorizontal").siblings().children(".tinput");
    tinput.children().each( function(i, e){
      $(e).val("");
    })
  }
  if (!rent.prop('checked')){
    tinput = rent.parents(".thorizontal").siblings().children(".tinput");
    tinput.children().each( function(i, e){
      $(e).val("");
    })
  }
}

function hiddenInputs () {
  var rent, sale;
  rent = $('#to_rent');
  sale = $('#to_sale');
  if (!rent.prop('checked')){
    rent.parents(".thorizontal").siblings().hide();
  }
  if (!sale.prop('checked')) {
    sale.parents(".thorizontal").siblings().hide();
  }
}
